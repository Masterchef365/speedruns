name: Actions
on: [push]

jobs:
  my-job:
    name: Action

    runs-on: ubuntu-latest

    steps:
      - name: preparation - checkout source
        uses: actions/checkout@v1

      - name: preparation - reading environment
        id: env
        run: |
          echo "::set-output name=rust::$(cat rust-toolchain)"
          echo "::set-output name=node::$(cat .nvmrc)"
          echo "::set-output name=git-branch::$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=yarn-cache::$(yarn cache dir)"

      - name: preparation - configure git write access
        run: |
          git remote rm origin
          git remote add origin "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
          git fetch origin
          git checkout ${{ steps.env.outputs.git-branch }}
          git config user.name "$(git log -1 --pretty=format:'%an')"
          git config user.email "$(git log -1 --pretty=format:'%ae')"

      - name: setup - install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ steps.env.outputs.rust }}

      - name: setup - install node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.env.outputs.node }}

      - name: setup - install node dependencies
        run: yarn install

      - name: test - cargo build
        run: cargo build --workspace

      - name: bot - code generation
        run: yarn generate

      - name: test - yarn build and export
        run: yarn export

      - name: bot - code formatting
        run: yarn format

      - name: bot - automatic fixes
        run: yarn fix

      - name: bot - commit any changes as autofix
        continue-on-error: true
        env:
          GIT_COMMITTER_NAME: autofix
          GIT_COMMITTER_EMAIL: bot@jeremy.ca
        run: bash scripts/commit-autofix.bash

      - name: test - cargo test
        run: cargo test --workspace

      - name: test - lint
        run: yarn lint

      - name: bot - add master to ✔️ first-parent chain if we made it this far
        if: github.ref == 'refs/heads/master'
        env:
          GIT_COMMITTER_NAME: autofix
          GIT_COMMITTER_EMAIL: bot@jeremy.ca
        run: bash scripts/merge-master-to-stable.bash

      - name: bot - trigger zeit deploy of ✔️
        if: github.ref == 'refs/heads/master'
        run: |
          curl "${{secrets.ZEIT_DEPLOY_STABLE}}"
          curl "${{secrets.GRAPHQL_DEPLOY_STABLE}}"
