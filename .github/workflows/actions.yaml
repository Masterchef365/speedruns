name: Actions
on: [push]

jobs:
  most-things:
    name: "test, fix, lint, and if on master, publish"
    runs-on: ubuntu-latest
    steps:
      - name: preparation - checkout source
        uses: actions/checkout@v1

      - name: preparation - reading environment
        id: env
        run: |
          echo "::set-output name=rust::$(cat rust-toolchain)"
          echo "::set-output name=node::$(cat .nvmrc)"
          echo "::set-output name=git-branch::$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=yarn-cache::$(yarn cache dir)"

      - name: preparation - configure git write access
        run: |
          git remote rm origin
          git remote add origin "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
          git fetch origin
          git checkout ${{ steps.env.outputs.git-branch }}
          git config user.name "$(git log -1 --pretty=format:'%an')"
          git config user.email "$(git log -1 --pretty=format:'%ae')"

      - name: setup - install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ steps.env.outputs.rust }}

      - name: setup - install node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.env.outputs.node }}

      - name: setup - install node dependencies
        run: yarn install

      - name: test - cargo build
        run: cargo build --workspace

      - name: bot - code generation
        run: yarn generate

      - name: test - yarn export
        run: yarn export

      - name: bot - code formatting
        run: yarn format

      - name: bot - automatic fixes
        run: yarn fix

      - name: bot - commit any changes as autofix
        continue-on-error: true
        env:
          GIT_COMMITTER_NAME: autofix
          GIT_COMMITTER_EMAIL: bot@jeremy.ca
        run: bash scripts/commit-autofix.bash

      - name: test - cargo test
        run: cargo test --workspace

      - name: test - lint
        run: yarn lint

      - name: publish - add `master` to `deploy` first-parent chain if we made it this far
        if: github.ref == 'refs/heads/master'
        env:
          GIT_COMMITTER_NAME: deploy
          GIT_COMMITTER_EMAIL: bot@jeremy.ca
        run: bash scripts/merge-master-to-stable.bash

      - name: publish - publish pre-release packages from `deploy`
        if: github.ref == 'refs/heads/master'
        run: bash scripts/publish.bash
        env:
          NPM_PUBLISH_TOKEN: ${{secrets.NPM_PUBLISH_TOKEN}}
          GITHUB_PUBLISH_TOKEN: ${{secrets.GITHUB_PUBLISH_TOKEN}}
          CARGO_PUBLISH_TOKEN: ${{secrets.CARGO_PUBLISH_TOKEN}}

      - name: publish - record published version
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v1
        with:
          name: version
          path: .version

  post-publish:
    name: "validate published packages"
    needs: most-things
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: setup - install node 13
        uses: actions/setup-node@v1
        with:
          node-version: 13.x

      - name: setup - install rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly

      - name: setup - recall published version
        uses: actions/download-artifact@v1
        with:
          name: version

      - name: validation - installed published packages
        run: |
          set -veuo pipefail
          version="$(cat version/.version)"

          cargo +nightly install speedruns --version $version
          speedruns --help

          npm install -g speedruns@$version
          speedruns-frontend --help

      - name: validation - run published packages
        run: |
          set -veuo pipefail
          version="$(cat version/.version)"

          speedruns serve --no-data --port 4001 &
          GRAPHQL_ENDPOINT=http://localhost:4001 speedruns-frontend &

          sleep 24

          curl http://localhost:3000 | grep "$version"

  deploy-prod:
    name: "deploy to prod"
    needs: post-publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: publish - trigger zeit deploy from `deploy`
        run: curl "${{secrets.ZEIT_DEPLOY_STABLE}}"

      - name: publish - trigger graphql deploy from published package
        run: curl "${{secrets.GRAPHQL_DEPLOY_STABLE}}"
