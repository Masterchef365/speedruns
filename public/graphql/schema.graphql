schema {
  query: Speedruns
  mutation: Speedruns
}

type Category implements Node {
  """GraphQL node ID"""
  id: ID!

  """speedrun.com category ID"""
  srcId: String!

  """URL slug used on speedruns.ca"""
  slug: String!

  """URL slug used on speedrun.com"""
  srcSlug: String!

  """name, in English if possible"""
  name: String!

  """leaderboards of ranked runs"""
  leaderboard(levelSlug: String, includeObsolete: Boolean): [LeaderboardRun!]!

  """progress of record over time"""
  progression(levelSlug: String, includeTies: Boolean): [ProgressionRun!]!
}

type Game implements Node {
  """GraphQL node ID"""
  id: ID!

  """speedrun.com game ID"""
  srcId: String!

  """URL slug used on speedruns.ca"""
  slug: String!

  """URL slug used on speedrun.com"""
  srcSlug: String!

  """name, in English if possible"""
  name: String!

  """all runs"""
  runs: [Run!]!

  """full-game run categories"""
  gameCategories: [Category!]!

  """individual level run categories"""
  levelCategories: [Category!]!

  """individual levels"""
  levels: [Level!]!
}

type LeaderboardRun {
  run: Run!
  rank: Int!
  isTied: Boolean!
  tiedRank: Int!
}

type Level implements Node {
  """GraphQL node ID"""
  id: ID!

  """speedrun.com level ID"""
  srcId: String!

  """URL slug used on speedruns.ca"""
  slug: String!

  """URL slug used on speedrun.com"""
  srcSlug: String!

  """name, in English if possible"""
  name: String!
  categories: [Category!]!

  """leaderboards of ranked runs"""
  leaderboard(categorySlug: String, includeObsolete: Boolean): [LeaderboardRun!]!

  """progress of record over time"""
  progression(categorySlug: String, includeTies: Boolean): [ProgressionRun!]!
}

"""
<https://graphql.org/learn/global-object-identification/>

"""
interface Node {
  """GraphQL node ID"""
  id: ID!
}

type Player {
  name: String!
  user: User
  isGuest: Boolean!
}

type ProgressionRun {
  progressMs: Int!
  run: Run!
  leaderboardRun: LeaderboardRun
}

type Run implements Node {
  """GraphQL node ID"""
  id: ID!

  """speedrun.com level ID"""
  srcId: String!
  category: Category!
  level: Level
  date: Float
  players: [Player!]!
  timeMs: Int!
}

type Speedruns {
  game(slug: String!): Game
  node(id: ID!): Node
}

type User implements Node {
  """GraphQL node ID"""
  id: ID!

  """speedrun.com user ID"""
  srcId: String!

  """URL slug used on speedruns.ca"""
  slug: String!

  """URL slug used on speedrun.com"""
  srcSlug: String!
}

