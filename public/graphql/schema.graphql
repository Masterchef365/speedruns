schema {
  query: Speedruns
  mutation: Speedruns
}

type Speedruns {
  """
  Gets a Game by global API ID, speedrun.com ID, or slug.

  Throws an error if multiple are specified but don't match the same game.
  """
  game(id: ID, srcId: String, slug: String): Game @juniper(ownership: "owned")

  """
  Gets a User by global API ID, speedrun.com ID, or slug.

  Throws an error if multiple are specified but don't match the same user.
  """
  user(id: ID, srcId: String, slug: String): User @juniper(ownership: "owned")

  """
  Gets a run by global API ID or speedrun.com ID.

  Throws an error if multiple are specified but don't match the same run.
  """
  run(id: ID, srcId: String): Run @juniper(ownership: "owned")

  """
  Gets any type of Node by global API ID.
  """
  node(id: ID!): Node @juniper(ownership: "owned", infallible: true)

  """
  Gets any number of Nodes of any types by global API IDs.
  """
  nodes(ids: [ID!]!): [Node]! @juniper(ownership: "owned", infallible: true)
}

"""
<https://graphql.org/learn/global-object-identification/>
"""
interface Node {
  """
  This node's global base64 ID.
  """
  id: ID! @juniper(ownership: "owned", infallible: true)
}

"""
A game on speedrun.com.
"""
type Game implements Node {
  """
  The game's global API ID.
  """
  id: ID! @juniper(ownership: "owned", infallible: true)

  """
  The game's speedrun.com ID.
  """
  srcId: String! @juniper(ownership: "owned", infallible: true)

  """
  The game's name, in English if possible.
  """
  name: String! @juniper(ownership: "owned", infallible: true)

  """
  The game's URL slug/abbreviation.
  """
  slug: String! @juniper(ownership: "owned", infallible: true)

  """
  All of the runs submitted for this game.
  """
  runs: [Run!]! @juniper(ownership: "owned", infallible: true)

  """
  The categories for full runs of this game.
  """
  categories: [Category!]! @juniper(ownership: "owned", infallible: true)

  """
  The individual levels in this game.
  """
  levels: [Level!]! @juniper(ownership: "owned", infallible: true)

  """
  The categories for individual level runs of this game.
  """
  levelCategories: [Category!]! @juniper(ownership: "owned", infallible: true)

  """
  Get a Run of this game by ID, or null if not found.
  """
  run(id: ID, srcId: String!): Run @juniper(ownership: "owned")
}

"""
A user of speedrun.com.
"""
type User implements Node {
  """
  The user's global API ID.
  """
  id: ID! @juniper(ownership: "owned", infallible: true)

  """
  The user's speedrun.com ID.
  """
  srcId: String! @juniper(ownership: "owned", infallible: true)

  """
  The user's URL slug/abbreviation.
  """
  slug: String! @juniper(ownership: "owned", infallible: true)

  """
  Runs submitted by this user, optionally limited to a set of games, categories, or levels.

  May return an error if a specified game, category, or level does not exist.
  """
  runs(
    game_slugs: [String!]
    category_slugs: [String!]
    level_slugs: [String!]
  ): [Run!]! @juniper(ownership: "owned")
}

"""
Whether a category is for a full-game runs or individual-level runs.
"""
enum CategoryType {
  FULL_GAME
  INDIVIDUAL_LEVEL
}

"""
A category for runs of a game of speedrun.com.
"""
type Category implements Node {
  """
  The category's global API ID.
  """
  id: ID! @juniper(ownership: "owned", infallible: true)

  """
  The category's speedrun.com ID.
  """
  srcId: String! @juniper(ownership: "owned", infallible: true)

  """
  Whether this category is for a full-game runs or individual-level runs.
  """
  type: CategoryType! @juniper(ownership: "owned", infallible: true)

  """
  The category's URL slug/abbreviation.
  """
  slug: String! @juniper(ownership: "owned", infallible: true)

  """
  Returns a leaderboard of runs in this category ranked.
  Level slug must be provided iff type is INDIVIDUAL_LEVEL.
  """
  leaderboard(levelSlug: String): [RankedRun!]!
    @juniper(ownership: "owned", infallible: true)

  """
  The game associated with this level.
  """
  game: Game! @juniper(ownership: "owned", infallible: true)
}

"""
A level of a game on speedrun.com.
"""
type Level implements Node {
  """
  The level's global API ID.
  """
  id: ID! @juniper(ownership: "owned", infallible: true)

  """
  The level's speedrun.com ID.
  """
  srcId: String! @juniper(ownership: "owned", infallible: true)

  """
  The level's name.
  """
  name: String! @juniper(ownership: "owned", infallible: true)

  """
  The level's slug.
  """
  slug: String! @juniper(ownership: "owned", infallible: true)

  """
  The game associated with this level.
  """
  game: Game! @juniper(ownership: "owned", infallible: true)
}

type Player {
  """
  The player's name, which may be a distinct username or a non-distinct guest
  nickname.
  """
  name: String! @juniper(ownership: "owned", infallible: true)

  """
  The associated user, if this is a user.
  """
  user: User @juniper(ownership: "owned", infallible: true)

  """
  Whether this player is a guest instead of a user.
  """
  isGuest: Boolean! @juniper(ownership: "owned", infallible: true)
}

"""
A run as ranked on a leaderboard of speedrun.com.
"""
type RankedRun {
  """
  This run's rank, with ties broken by date.
  """
  rank: Int! @juniper(ownership: "owned", infallible: true)

  """
  The time of this run, as measured by this leaderboard's rules, in miliseconds.
  """
  timeMs: Int! @juniper(ownership: "owned", infallible: true)

  """
  Whether this run is tied for this rank.
  """
  isTied: Boolean! @juniper(ownership: "owned", infallible: true)

  """
  This run's rank, with ties unbroken.
  """
  tiedRank: Int! @juniper(ownership: "owned", infallible: true)

  """
  The run.
  """
  run: Run! @juniper(ownership: "owned", infallible: true)
}

"""
A run of a game on speedrun.com.
"""
type Run implements Node {
  """
  The run's global API ID.
  """
  id: ID! @juniper(ownership: "owned", infallible: true)

  """
  The run's speedrun.com ID.
  """
  srcId: String! @juniper(ownership: "owned", infallible: true)

  """
  The game associated with this run.
  """
  game: Game! @juniper(ownership: "owned", infallible: true)

  """
  The category associated with this run.
  """
  category: Category! @juniper(ownership: "owned", infallible: true)

  """
  The level associated with this run, or null.
  """
  level: Level @juniper(ownership: "owned", infallible: true)

  """
  The date on which this run was performed.
  """
  date: Float @juniper(ownership: "owned", infallible: true)

  """
  The players participating in this run.
  """
  players: [Player!]! @juniper(ownership: "owned", infallible: true)
}
